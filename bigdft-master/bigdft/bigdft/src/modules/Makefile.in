# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
subdir = src/modules
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/configure.c.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/m4/acc.m4 \
	$(top_srcdir)/config/m4/alborz.m4 \
	$(top_srcdir)/config/m4/amber.m4 \
	$(top_srcdir)/config/m4/archive.m4 \
	$(top_srcdir)/config/m4/chess.m4 \
	$(top_srcdir)/config/m4/defs.m4 \
	$(top_srcdir)/config/m4/dynlib.m4 \
	$(top_srcdir)/config/m4/etsfio.m4 \
	$(top_srcdir)/config/m4/flib.m4 \
	$(top_srcdir)/config/m4/fortran.m4 \
	$(top_srcdir)/config/m4/gain.m4 \
	$(top_srcdir)/config/m4/introspection.m4 \
	$(top_srcdir)/config/m4/libxc.m4 \
	$(top_srcdir)/config/m4/linalg.m4 \
	$(top_srcdir)/config/m4/mpi.m4 $(top_srcdir)/config/m4/pic.m4 \
	$(top_srcdir)/config/m4/pkg.m4 \
	$(top_srcdir)/config/m4/psolver.m4 \
	$(top_srcdir)/config/m4/python.m4 \
	$(top_srcdir)/config/m4/suitepkg.m4 \
	$(top_srcdir)/config/m4/yaml.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = configure.c
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
libmodules_a_AR = $(AR) $(ARFLAGS)
libmodules_a_LIBADD =
am__libmodules_a_SOURCES_DIST = ab7_mixing.f90 dpbox.f90 \
	psp_projectors.f90 psp_projectors_base.f90 input_keys.f90 \
	input_dicts.f90 types.f90 input.f90 interfaces.f90 \
	private_api.f90 module_lj.f90 module_morse_bulk.f90 \
	module_lenosky_si.f90 module_tersoff.f90 module_alborz.f90 \
	module_bornmayerhugginstosifumi.f90 module_tdpot.f90 \
	module_coulomb.f90 module_bazant.f90 BigDFT_API.f90 \
	vdwcorrection.f90 fragments.f90 fragment_base.f90 \
	constrained_dft.f90 diis_module.f90 atoms_data.f90 \
	communications_init.f90 communications.f90 \
	sparsematrix_wrappers.f90 internal_coordinates.f90 \
	module_sqn.f90 transposed_operations.f90 module_forces.f90 \
	unitary_tests.f90 io.f90 postprocessing_linear.f90 \
	orbital_basis.f90 bigdft_run.f90 sockets.c fsockets.f90 \
	rhopotential.f90 multipole_base.f90 multipole.f90 \
	orthonormalization.f90 locregs_init.f90 sort.f90 \
	forces_linear.f90 bigdft_matrices.f90 configure.c \
	alborz_fake.f90 cp2k_fake.f90 module_cp2k.f90 openbabel_fake.c \
	module_dftbp.f90 constrained_magnetic_field.f90 module_asd.f90 \
	sw_potential.f90 get_basis.f90 asd_fake.f90 get_kernel.f90 \
	module_utilities.f90
@HAVE_ALBORZ_FALSE@am__objects_1 = alborz_fake.$(OBJEXT) \
@HAVE_ALBORZ_FALSE@	module_alborz.$(OBJEXT)
@HAVE_ALBORZ_TRUE@am__objects_1 = module_alborz.$(OBJEXT)
@HAVE_CP2K_FALSE@am__objects_2 = cp2k_fake.$(OBJEXT) \
@HAVE_CP2K_FALSE@	module_cp2k.$(OBJEXT)
@HAVE_CP2K_TRUE@am__objects_2 = module_cp2k.$(OBJEXT)
@HAVE_OPENBABEL_FALSE@am__objects_3 = openbabel_fake.$(OBJEXT)
am_libmodules_a_OBJECTS = ab7_mixing.$(OBJEXT) dpbox.$(OBJEXT) \
	psp_projectors.$(OBJEXT) psp_projectors_base.$(OBJEXT) \
	input_keys.$(OBJEXT) input_dicts.$(OBJEXT) types.$(OBJEXT) \
	input.$(OBJEXT) interfaces.$(OBJEXT) private_api.$(OBJEXT) \
	module_lj.$(OBJEXT) module_morse_bulk.$(OBJEXT) \
	module_lenosky_si.$(OBJEXT) module_tersoff.$(OBJEXT) \
	module_alborz.$(OBJEXT) \
	module_bornmayerhugginstosifumi.$(OBJEXT) \
	module_tdpot.$(OBJEXT) module_coulomb.$(OBJEXT) \
	module_bazant.$(OBJEXT) BigDFT_API.$(OBJEXT) \
	vdwcorrection.$(OBJEXT) fragments.$(OBJEXT) \
	fragment_base.$(OBJEXT) constrained_dft.$(OBJEXT) \
	diis_module.$(OBJEXT) atoms_data.$(OBJEXT) \
	communications_init.$(OBJEXT) communications.$(OBJEXT) \
	sparsematrix_wrappers.$(OBJEXT) internal_coordinates.$(OBJEXT) \
	module_sqn.$(OBJEXT) transposed_operations.$(OBJEXT) \
	module_forces.$(OBJEXT) unitary_tests.$(OBJEXT) io.$(OBJEXT) \
	postprocessing_linear.$(OBJEXT) orbital_basis.$(OBJEXT) \
	bigdft_run.$(OBJEXT) sockets.$(OBJEXT) fsockets.$(OBJEXT) \
	rhopotential.$(OBJEXT) multipole_base.$(OBJEXT) \
	multipole.$(OBJEXT) orthonormalization.$(OBJEXT) \
	locregs_init.$(OBJEXT) sort.$(OBJEXT) forces_linear.$(OBJEXT) \
	bigdft_matrices.$(OBJEXT) configure.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2) $(am__objects_3) module_dftbp.$(OBJEXT) \
	constrained_magnetic_field.$(OBJEXT) module_asd.$(OBJEXT) \
	sw_potential.$(OBJEXT) get_basis.$(OBJEXT) asd_fake.$(OBJEXT) \
	get_kernel.$(OBJEXT) module_utilities.$(OBJEXT)
libmodules_a_OBJECTS = $(am_libmodules_a_OBJECTS)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
FCCOMPILE = $(FC) $(AM_FCFLAGS) $(FCFLAGS)
FCLD = $(FC)
FCLINK = $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
SOURCES = $(libmodules_a_SOURCES)
DIST_SOURCES = $(am__libmodules_a_SOURCES_DIST)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(dynlibdir)" "$(DESTDIR)$(moduledir)"
DATA = $(dynlib_DATA) $(module_DATA) $(noinst_DATA)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
AX_PYYAML_PATH = @AX_PYYAML_PATH@
BIGDFT_MAJOR_VERSION = @BIGDFT_MAJOR_VERSION@
BIGDFT_MICRO_VERSION = @BIGDFT_MICRO_VERSION@
BIGDFT_MINOR_VERSION = @BIGDFT_MINOR_VERSION@
BIGDFT_NANO_VERSION = @BIGDFT_NANO_VERSION@
BUILD_BINDINGS_END = @BUILD_BINDINGS_END@
BUILD_BINDINGS_START = @BUILD_BINDINGS_START@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CC_BUILD_SHARED = @CC_BUILD_SHARED@
CC_EXPORTS = @CC_EXPORTS@
CC_PIC_FLAG = @CC_PIC_FLAG@
CC_RPATH = @CC_RPATH@
CFLAGS = @CFLAGS@
CHESS_CFLAGS = @CHESS_CFLAGS@
CHESS_LIBS = @CHESS_LIBS@
CONFIG_ARGS = @CONFIG_ARGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CUDA_INCLUDE = @CUDA_INCLUDE@
CUDA_INCLUDE_PATH = @CUDA_INCLUDE_PATH@
CUDA_PATH = @CUDA_PATH@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
F90_1D_POINTER_SHIFT = @F90_1D_POINTER_SHIFT@
F90_1D_POINTER_SIZE = @F90_1D_POINTER_SIZE@
F90_2D_POINTER_SHIFT = @F90_2D_POINTER_SHIFT@
F90_2D_POINTER_SIZE = @F90_2D_POINTER_SIZE@
F90_3D_POINTER_SHIFT = @F90_3D_POINTER_SHIFT@
F90_3D_POINTER_SIZE = @F90_3D_POINTER_SIZE@
F90_4D_POINTER_SHIFT = @F90_4D_POINTER_SHIFT@
F90_4D_POINTER_SIZE = @F90_4D_POINTER_SIZE@
F90_5D_POINTER_SHIFT = @F90_5D_POINTER_SHIFT@
F90_5D_POINTER_SIZE = @F90_5D_POINTER_SIZE@
FC = @FC@
FCDEFS = @FCDEFS@
FCFLAGS = @FCFLAGS@
FCFLAGS_OPENMP = @FCFLAGS_OPENMP@
FCFLAGS_f90 = @FCFLAGS_f90@
FCLIBS = @FCLIBS@
FC_BUILD_SHARED = @FC_BUILD_SHARED@
FC_EXPORTS = @FC_EXPORTS@
FC_PIC_FLAG = @FC_PIC_FLAG@
FC_RPATH = @FC_RPATH@
FFLAGS = @FFLAGS@
FUTILE_CFLAGS = @FUTILE_CFLAGS@
FUTILE_LIBS = @FUTILE_LIBS@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_END_FALSE = @GLIB_END_FALSE@
GLIB_END_TRUE = @GLIB_END_TRUE@
GLIB_FALSE = @GLIB_FALSE@
GLIB_LIBS = @GLIB_LIBS@
GLIB_TRUE = @GLIB_TRUE@
GOBJECT_INTROSPECTION_CFLAGS = @GOBJECT_INTROSPECTION_CFLAGS@
GOBJECT_INTROSPECTION_LIBS = @GOBJECT_INTROSPECTION_LIBS@
GREP = @GREP@
G_IR_COMPILER = @G_IR_COMPILER@
G_IR_SCANNER = @G_IR_SCANNER@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBABINIT_INCLUDE = @LIBABINIT_INCLUDE@
LIBDICTS_CFLAGS = @LIBDICTS_CFLAGS@
LIBDICTS_LIBS = @LIBDICTS_LIBS@
LIBETSFIO_INCLUDE = @LIBETSFIO_INCLUDE@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIB_ARCHIVE_CFLAGS = @LIB_ARCHIVE_CFLAGS@
LIB_ARCHIVE_LIBS = @LIB_ARCHIVE_LIBS@
LIB_BIGDFT_DEPS = @LIB_BIGDFT_DEPS@
LIB_BIGDFT_PKG = @LIB_BIGDFT_PKG@
LIB_CHESS_CFLAGS = @LIB_CHESS_CFLAGS@
LIB_CHESS_DYNAMIC_LIBS = @LIB_CHESS_DYNAMIC_LIBS@
LIB_CHESS_LIBS = @LIB_CHESS_LIBS@
LIB_FUTILE_CFLAGS = @LIB_FUTILE_CFLAGS@
LIB_FUTILE_DYNAMIC_LIBS = @LIB_FUTILE_DYNAMIC_LIBS@
LIB_FUTILE_LIBS = @LIB_FUTILE_LIBS@
LIB_GAIN_CFLAGS = @LIB_GAIN_CFLAGS@
LIB_GAIN_LIBS = @LIB_GAIN_LIBS@
LIB_LIBDICTS_CFLAGS = @LIB_LIBDICTS_CFLAGS@
LIB_LIBDICTS_DYNAMIC_LIBS = @LIB_LIBDICTS_DYNAMIC_LIBS@
LIB_LIBDICTS_LIBS = @LIB_LIBDICTS_LIBS@
LIB_OPENBABEL_CFLAGS = @LIB_OPENBABEL_CFLAGS@
LIB_OPENBABEL_DYNAMIC_LIBS = @LIB_OPENBABEL_DYNAMIC_LIBS@
LIB_OPENBABEL_LIBS = @LIB_OPENBABEL_LIBS@
LIB_PSOLVER_CFLAGS = @LIB_PSOLVER_CFLAGS@
LIB_PSOLVER_DYNAMIC_LIBS = @LIB_PSOLVER_DYNAMIC_LIBS@
LIB_PSOLVER_LIBS = @LIB_PSOLVER_LIBS@
LIB_XC_CFLAGS = @LIB_XC_CFLAGS@
LIB_XC_LIBS = @LIB_XC_LIBS@
LINALG_LIBS = @LINALG_LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MEMORY_LIMIT = @MEMORY_LIMIT@
MKDIR_P = @MKDIR_P@
MODULE_EXT = @MODULE_EXT@
MPI_INCLUDE = @MPI_INCLUDE@
MPI_LDFLAGS = @MPI_LDFLAGS@
MPI_LIBS = @MPI_LIBS@
NAB = @NAB@
NVCC = @NVCC@
NVCC_FLAGS = @NVCC_FLAGS@
OBJEXT = @OBJEXT@
OCL_INCLUDE = @OCL_INCLUDE@
OCL_INCLUDE_PATH = @OCL_INCLUDE_PATH@
OPENBABEL_CFLAGS = @OPENBABEL_CFLAGS@
OPENBABEL_LIBS = @OPENBABEL_LIBS@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PSOLVER_CFLAGS = @PSOLVER_CFLAGS@
PSOLVER_LIBS = @PSOLVER_LIBS@
PYTHON = @PYTHON@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_INCLUDES = @PYTHON_INCLUDES@
PYTHON_LIBS = @PYTHON_LIBS@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_FC = @ac_ct_FC@
ac_have_doxygen = @ac_have_doxygen@
ac_have_pdflatex = @ac_have_pdflatex@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
girdir = @girdir@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
moduledir = @moduledir@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
typelibsdir = @typelibsdir@

# To be installed:
noinst_LIBRARIES = libmodules.a
module_DATA = $(modules)
dynlibdir = $(libdir)
dynlib_DATA = $(openbabel_dynamic_library)
noinst_DATA = $(openbabel_soname_library)
@HAVE_CP2K_FALSE@cp2k_interfacemod = cp2k_fake.f90 module_cp2k.f90

#if USE_MPI
#mpi_include =
#else
#mpi_include = mpif.h
#endif
@HAVE_CP2K_TRUE@cp2k_interfacemod = module_cp2k.f90
@HAVE_CP2K_FALSE@cp2k_interfacemodCAP = CP2K_FAKE.F90 MODULE_CP2K.F90
@HAVE_CP2K_TRUE@cp2k_interfacemodCAP = MODULE_CP2k.F90
@HAVE_CP2K_FALSE@cp2k_interfacemodmod = cp2k_fake module_cp2k
@HAVE_CP2K_TRUE@cp2k_interfacemodmod = module_cp2k
@HAVE_CP2K_FALSE@cp2k_interfacemodCAPmod = CP2K_FAKE MODULE_CP2K
@HAVE_CP2K_TRUE@cp2k_interfacemodCAPmod = MODULE_CP2k
@HAVE_ALBORZ_FALSE@alborz_interfacemod = alborz_fake.f90 module_alborz.f90
@HAVE_ALBORZ_TRUE@alborz_interfacemod = module_alborz.f90
@HAVE_ALBORZ_FALSE@alborz_interfacemodCAP = alborz_FAKE.F90 MODULE_ALBORZ.F90
@HAVE_ALBORZ_TRUE@alborz_interfacemodCAP = MODULE_ALBORZ.F90
@HAVE_ALBORZ_FALSE@alborz_interfacemodmod = alborz_fake module_alborz
@HAVE_ALBORZ_TRUE@alborz_interfacemodmod = module_alborz
@HAVE_ALBORZ_FALSE@alborz_interfacemodCAPmod = alborz_FAKE MODULE_alborz
@HAVE_ALBORZ_TRUE@alborz_interfacemodCAPmod = MODULE_ALBORZ

#if HAVE_PEXSI
#PEXSI_SRC = pexsi_base.f90 pexsi_interfaces.f90 pexsi.f90
#else
#PEXSI_SRC = pexsi_base.f90 pexsi_interfaces_fake.f90 pexsi.f90
#endif
libmodules_a_SOURCES = ab7_mixing.f90 \
	dpbox.f90 \
	psp_projectors.f90 \
	psp_projectors_base.f90 \
	input_keys.f90 \
	input_dicts.f90 \
	types.f90 \
	input.f90 \
	interfaces.f90 \
	private_api.f90 \
	module_lj.f90 \
	module_morse_bulk.f90 \
	module_lenosky_si.f90 \
	module_tersoff.f90 \
	module_alborz.f90 \
	module_bornmayerhugginstosifumi.f90 \
	module_tdpot.f90 \
	module_coulomb.f90 \
	module_bazant.f90 \
	BigDFT_API.f90 \
	vdwcorrection.f90 \
	fragments.f90 \
	fragment_base.f90 \
	constrained_dft.f90 \
	diis_module.f90 \
	atoms_data.f90 \
	communications_init.f90 \
	communications.f90 \
	sparsematrix_wrappers.f90 \
	internal_coordinates.f90 \
	module_sqn.f90 \
	transposed_operations.f90 \
	module_forces.f90 \
	unitary_tests.f90 \
	io.f90 \
	postprocessing_linear.f90 \
	orbital_basis.f90 \
	bigdft_run.f90 \
	sockets.c \
	fsockets.f90 \
	rhopotential.f90 \
	multipole_base.f90 \
	multipole.f90 \
	orthonormalization.f90 \
	locregs_init.f90 \
	sort.f90 \
	forces_linear.f90 \
	bigdft_matrices.f90 \
	configure.c \
	$(alborz_interfacemod) \
	$(cp2k_interfacemod) \
	$(openbabel_static_sources) \
	module_dftbp.f90 \
	constrained_magnetic_field.f90 \
	module_asd.f90 \
	sw_potential.f90 \
	get_basis.f90 \
	asd_fake.f90 \
	get_kernel.f90 \
	module_utilities.f90

@CAPITALIZE_FALSE@modules = module_types.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	module_mixing.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	module_interfaces.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	module_private_api.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	module_input.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	bigdft_api.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	vdwcorrection.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	module_fragments.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	constrained_dft.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	diis_sd_optimization.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	input_old_text_format.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	module_input_keys.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	module_input_dicts.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	psp_projectors.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	psp_projectors_base.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	module_dpbox.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	module_atoms.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	module_cfd.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	module_asd.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	communications_init.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	communications.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	sparsematrix_wrappers.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	internal_coordinates.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	module_sqn.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	module_forces.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	transposed_operations.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	unitary_tests.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	io.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	postprocessing_linear.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	bigdft_run.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	rhopotential.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	multipole_base.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	fragment_base.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	multipole.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	orthonormalization.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	locregs_init.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	forces_linear.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	bigdft_matrices.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	sort.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	module_lj.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	f90sockets.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	module_morse_bulk.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	module_tersoff.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	module_alborz.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	module_bornmayerhugginstosifumi.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	module_lenosky_si.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	orbitalbasis.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	module_dftbp.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	module_tdpot.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	module_cp2k.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	module_coulomb.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	module_bazant.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	swpotential.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	get_basis.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	get_kernel.@MODULE_EXT@ \
@CAPITALIZE_FALSE@	module_utilities.@MODULE_EXT@


# Modules
@CAPITALIZE_TRUE@modules = MODULE_TYPES.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	MODULE_MIXING.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	MODULE_INTERFACES.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	MODULE_PRIVATE_API.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	MODULE_INPUT.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	BIGDFT_API.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	VDWCORRECTION.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	MODULE_FRAGMENTS.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	CONSTRAINED_DFT.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	DIIS_SD_OPTIMIZATION.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	INPUT_OLD_TEXT_FORMAT.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	MODULE_INPUT_KEYS.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	MODULE_INPUT_DICTS.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	PSP_PROJECTORS.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	PSP_PROJECTORS_BASE.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	MODULE_DPBOX.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	MODULE_ATOMS.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	MODULE_CFD.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	MODULE_ASD.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	COMMUNICATIONS_INIT.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	COMMUNICATIONS.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	SPARSEMATRIX_WRAPPERS.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	INTERNAL_COORDINATES.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	MODULE_SQN.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	MODULE_FORCES.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	TRANSPOSED_OPERATIONS.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	UNITARY_TESTS.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	IO.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	POSTPROCESSING_LINEAR.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	BIGDFT_RUN.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	RHOPOTENTIAL.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	MULTIPOLE_BASE.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	FRAGMENT_BASE.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	MULTIPOLE.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	ORTHONORMALIZATION.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	LOCREGS_INIT.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	SORT.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	FORCES_LINEAR.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	MODULE_LJ.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	F90SOCKETS.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	MODULE_LENOSKY_SI.@MODULE_EXT@\
@CAPITALIZE_TRUE@	MODULE_MORSE_BULK.@MODULE_EXT@\
@CAPITALIZE_TRUE@	MODULE_TERSOFF.@MODULE_EXT@\
@CAPITALIZE_TRUE@	BIGDFT_MATRICES.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	MODULE_BORNMAYERHUGGINSTOSIFUMI.@MODULE_EXT@\
@CAPITALIZE_TRUE@	MODULE_DFTBP.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	MODULE_COULOMB.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	MODULE_BAZANT.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	ORBITALBASIS.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	MODULE_TDPOT.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	MODULE_CP2K.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	SWPOTENTIAL.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	GET_BASIS.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	GET_KERNEL.@MODULE_EXT@ \
@CAPITALIZE_TRUE@	MODULE_UTILITIES.@MODULE_EXT@

ATOMS_INCLUDES = astruct-inc.f90
COMMS_INCLUDES = transpose-inc.f90
@HAVE_OPENBABEL_TRUE@openbabel_dynamic_sources = openbabel.cpp
@HAVE_OPENBABEL_TRUE@openbabel_dynamic_library = libbabel.so.@BIGDFT_MINOR_VERSION@.0.@BIGDFT_MICRO_VERSION@
@HAVE_OPENBABEL_TRUE@openbabel_soname_library = libbabel.so.@BIGDFT_MINOR_VERSION@
@HAVE_OPENBABEL_TRUE@openbabel_library = $(openbabel_soname_library)
@HAVE_OPENBABEL_TRUE@AM_LDFLAGS = -Wl,-rpath=$(DESTDIR)$(dynlibdir)
@HAVE_OPENBABEL_FALSE@openbabel_static_sources = openbabel_fake.c
@HAVE_OPENBABEL_FALSE@AM_CFLAGS = -I. -I$(srcdir) -I$(top_builddir)/includes @MPI_INCLUDE@ @LIBABINIT_INCLUDE@ @LIB_XC_CFLAGS@ @LIB_FUTILE_CFLAGS@
EXTRA_DIST = $(ATOMS_INCLUDES) $(COMMS_INCLUDES) openbabel.cpp
CLEANFILES = *.@MODULE_EXT@ libbabel.so*
AM_FCFLAGS = -I. -I$(srcdir) -I$(top_builddir)/includes @MPI_INCLUDE@ @LIBABINIT_INCLUDE@ @LIB_XC_CFLAGS@ @LIB_FUTILE_CFLAGS@
AM_CXXFLAGS = @LIB_FUTILE_CFLAGS@ @LIB_OPENBABEL_CFLAGS@

# Hack for XLF strange DEFS option.
PPFCCOMPILE = $(FC) $(DEFS:-D%=@FCDEFS@%) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .f90 .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/modules/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/modules/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
configure.c: $(top_builddir)/config.status $(srcdir)/configure.c.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libmodules.a: $(libmodules_a_OBJECTS) $(libmodules_a_DEPENDENCIES) 
	-rm -f libmodules.a
	$(libmodules_a_AR) libmodules.a $(libmodules_a_OBJECTS) $(libmodules_a_LIBADD)
	$(RANLIB) libmodules.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/configure.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openbabel_fake.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sockets.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.f90.o:
	$(FCCOMPILE) -c -o $@ $(FCFLAGS_f90) $<

.f90.obj:
	$(FCCOMPILE) -c -o $@ $(FCFLAGS_f90) `$(CYGPATH_W) '$<'`
install-dynlibDATA: $(dynlib_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(dynlibdir)" || $(MKDIR_P) "$(DESTDIR)$(dynlibdir)"
	@list='$(dynlib_DATA)'; test -n "$(dynlibdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(dynlibdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(dynlibdir)" || exit $$?; \
	done

uninstall-dynlibDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dynlib_DATA)'; test -n "$(dynlibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(dynlibdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(dynlibdir)" && rm -f $$files
install-moduleDATA: $(module_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(moduledir)" || $(MKDIR_P) "$(DESTDIR)$(moduledir)"
	@list='$(module_DATA)'; test -n "$(moduledir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(moduledir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(moduledir)" || exit $$?; \
	done

uninstall-moduleDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(module_DATA)'; test -n "$(moduledir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(moduledir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(moduledir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(dynlibdir)" "$(DESTDIR)$(moduledir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-dynlibDATA install-moduleDATA
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-data-hook
install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-dynlibDATA uninstall-moduleDATA

.MAKE: install-am install-data-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-data-hook install-dvi install-dvi-am \
	install-dynlibDATA install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-moduleDATA install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags uninstall uninstall-am uninstall-dynlibDATA \
	uninstall-moduleDATA


#dependencies
$(modules): $(libmodules_a_OBJECTS)
#multipole_base.o: base.o
#fragment_base.o: public_keys.o

input.o: fragment_base.o
input_dicts.o: fragment_base.o input.o
atoms_data.o: $(ATOMS_INCLUDES) internal_coordinates.o input_dicts.o
input_keys.o: multipole_base.o atoms_data.o input.o fragment_base.o vdwcorrection.o
types.o: psp_projectors_base.o atoms_data.o input_keys.o \
	ab7_mixing.o multipole_base.o dpbox.o constrained_magnetic_field.o module_asd.o
interfaces.o: types.o fragments.o diis_module.o constrained_dft.o input_keys.o

BigDFT_API.o: types.o interfaces.o atoms_data.o input_dicts.o psp_projectors.o communications_init.o bigdft_run.o
vdwcorrection.o: atoms_data.o
private_api.o: types.o interfaces.o
diis_module.o: types.o
fragments.o: input_keys.o types.o fragment_base.o
constrained_dft.o: input_keys.o
#psp_projectors_base.o:  gaussians.o
psp_projectors.o: locregs_init.o psp_projectors_base.o
#communications_base.o: base.o
#dpbox.o: base.o bounds.o
communications_init.o: types.o
communications.o: $(COMMS_INCLUDES) types.o
sparsematrix_wrappers.o: types.o interfaces.o
gaussdaub.o: psp_projectors_base.o
#module_sqn.o: base.o
bigdft_run.o: types.o input_dicts.o interfaces.o module_forces.o module_lenosky_si.o module_lj.o module_morse_bulk.o \
		module_tersoff.o module_alborz.o module_bornmayerhugginstosifumi.o module_cp2k.o module_dftbp.o sw_potential.o module_tdpot.o \
		module_coulomb.o module_bazant.o
#ab7_mixing.o: defs.o
#module_lj.o: base.o defs.o
#module_tdpot.o: base.o defs.o
#module_cp2k.o: base.o defs.o
#module_morse_bulk.o: base.o
module_coulomb.o: types.o
module_bazant.o: types.o
module_dftbp.o: types.o 
module_tersoff.o: atoms_data.o
module_alborz.o: atoms_data.o
module_bornmayerhugginstosifumi.o: atoms_data.o
#module_lenosky_si.o: base.o defs.o
transposed_operations.o: types.o bigdft_matrices.o
module_forces.o: types.o 
unitary_tests.o: types.o interfaces.o communications_init.o communications.o transposed_operations.o rhopotential.o
io.o: types.o interfaces.o input_keys.o
postprocessing_linear.o: types.o interfaces.o communications.o transposed_operations.o rhopotential.o sort.o communications_init.o locregs_init.o multipole_base.o multipole.o io.o get_kernel.o
rhopotential.o: types.o interfaces.o communications.o bigdft_matrices.o constrained_magnetic_field.o atoms_data.o
multipole.o: multipole_base.o interfaces.o orthonormalization.o io.o orbital_basis.o
orbital_basis.o:  types.o interfaces.o communications.o
orthonormalization.o: types.o communications.o transposed_operations.o atoms_data.o
locregs_init.o: types.o communications.o sort.o interfaces.o
forces_linear.o: types.o psp_projectors.o transposed_operations.o
sw_potential.o: atoms_data.o
bigdft_matrices.o: types.o sparsematrix_wrappers.o
get_basis.o: types.o interfaces.o communications.o rhopotential.o constrained_dft.o fragment_base.o fragments.o transposed_operations.o locregs_init.o get_kernel.o io.o
get_kernel.o: types.o interfaces.o diis_module.o communications.o constrained_dft.o rhopotential.o transposed_operations.o locregs_init.o orthonormalization.o
module_utilities.o: multipole.o
#if HAVE_PEXSI
#pexsi_interfaces.o: pexsi_base.o
#pexsi.o: pexsi_base.o pexsi_interfaces.o
#else
#pexsi_interfaces_fake.o: pexsi_base.o
#pexsi.o: pexsi_base.o pexsi_interfaces_fake.o
#endif

# Copy modules in a common include directory.
all: all-am insmod
install: install-am insmod
check: check-am insmod
insmod: $(modules) libmodules.a
	test -e "$(top_builddir)/includes" || $(INSTALL) -d -m 755 $(top_builddir)/includes
	for mod in "$(modules)" ; do \
	  $(INSTALL) -m 644  $$mod $(top_builddir)/includes ; \
	done
#	test -z "$(mpi_include)" || $(INSTALL) -m 644 mpif.h $(top_builddir)/includes

$(openbabel_dynamic_library): $(openbabel_dynamic_sources)
	$(CXX) $(CXXFLAGS) @CC_PIC_FLAG@ @LIB_OPENBABEL_CFLAGS@ -shared -I$(top_builddir) @GLIB_CFLAGS@ @LIB_FUTILE_CFLAGS@ $(LDFLAGS) $(AM_LDFLAGS) -Wl,-soname=$(openbabel_soname_library) -o $@ $< @LIB_OPENBABEL_LIBS@ @LIB_LIBDICTS_LIBS@ 
	@chmod a+x $@

$(openbabel_soname_library): $(openbabel_dynamic_library)
	ln -fs $^ $@
	ln -fs $@ libbabel.so

install-data-hook:
	if test -n "$(openbabel_dynamic_library)" ; then \
	  cd $(DESTDIR)$(dynlibdir) ; \
	  chmod a+x $(openbabel_dynamic_library) ; \
	  ln -fs $(openbabel_dynamic_library) $(openbabel_soname_library) ; \
	  ln -fs $(openbabel_soname_library) libbabel.so ; \
	fi

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
